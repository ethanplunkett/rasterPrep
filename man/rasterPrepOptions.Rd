% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rasterPrepOptions.R
\name{rasterPrepOptions}
\alias{rasterPrepOptions}
\title{change rasterPrep package settings}
\usage{
rasterPrepOptions(...)
}
\arguments{
\item{...}{Arguments should be settings to reset with their value the new
setting. If called with no arguments nothing is changed but the current
settings are returned.}
}
\value{
a list of the current settings is returned if the function is called
with no arguments.
}
\description{
This function allows the user to retrieve or change the settings for the
rasterPrep package
}
\details{
Settings in order of decreasing relevance:

\code{verbose} - defaults to \code{FALSE}. If \code{TRUE} than progress and GDAL Utiltiy
arguments will be printed to the console.

\code{usesf} - If \code{TRUE} use GDAL Utilty wrappers from the \pkg{sf} package.
Set to \code{FALSE} to use system installed GDAL utilities via \code{shell}, which
must be installed separately.  \code{usesf = FALSE} has not been tested on all
platforms and may be dropped in the future.

The remaining three options are all only relevant if \code{usesf} is \code{FALSE} and
are to manage the issues created by the \code{sp} and \code{rgdal}.
They may be dropped in the future.

\code{resetLibs} -  controls whether raster prep should attempt to reset the system
environmental settings for PROJ_LIB and GDAL_DATA prior to executing system
calls it defaults to\code{TRUE}.

\code{projLib} - is what the \code{PROJ_LIB} environmental setting should be when making
shell calls to GDAL Utilities. It defaults to the system environment
variable \code{RASTERPREP_PROJ} or if that's not set to an empty string (\code{""}).

\code{gdalData} - is what the GDAL_DATA environmental variable should be set to
during shell calls (if \code{resetsLibs} is \code{TRUE}). It defaults to an empty
string (\code{""}).

There's a lot of historical junk here.  R spatial packages were all put in
disarray when the PROJ library was updated from version 4.
Prior to that change PROJ was stable and all installed GDAL versions
would use the same PROJ library directory.  However, when PROJ started
changing it became important that the right PROJ directory was
used. To get around PROJ version conflics \code{sp} and  \code{rgdal}  started
changing system environmental variables when they were loaded.
This helped calls to GDAL from those packages find the right PROJ directory
but would break calls from R to the system installed GDAL if it used a
different PROJ version.  In response \code{rasterPrep}
would defensively reset the the \code{PROJ_LIB} and \code{GDAL_DATA} environmental
variables for the duration of the system calls it made.

See:
\url{https://github.com/r-spatial/discuss/issues/31}  # nolint: line_length_linter
for a discussion of this 'issue.

\pkg{rasterPrep} currently uses \pkg{sf} by default bipassing all these
complications.  As of April 2024 this is new, but assuming it proves stable
the options to use system commands (\code{usesf = FALSE}) may be dropped
completely.
}
