% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rasterPrepOptions.R
\name{rasterPrepOptions}
\alias{rasterPrepOptions}
\title{change rasterPrep package settings}
\usage{
rasterPrepOptions(...)
}
\arguments{
\item{...}{Arguments should be settings to reset with their value the new
setting. If called with no arguments nothing is changed but the current
settings are printed.}
}
\value{
a list of the current settings is returned if the function is called
with no arguments.
}
\description{
This function allows the user to retrieve or change the settings for the
rasterPrep package
}
\details{
Currently there are five settings:

\code{resetLibs} -  controls whether raster prep should attempt to reset the system
environmental settings for PROJ_LIB and GDAL_DATA prior to executing system
calls it defaults to TRUE.

\code{projLib} - is what the PROJ_LIB environmental setting should be when making
shell calls to gdal utilities. It defaults to the system environment
variable "RASTERPREP_PROJ" or if that's not set to an empty string (\code{""}).

\code{gdalData} - is what the GDAL_DATA environmental variable should be set to
during shell calls (if \code{resetsLibs} is \code{TRUE}). It defaults to an empty
string (\code{""}).

\code{verbose} - defaults to FALSE.  If TRUE than progress and command structure
will be printed to the console.

\code{usesf} - If TRUE use the sf package.  Otherwise use shell to call gdal
utilties on the command line. This is a temporary option to facilitate
the transition to \strong{sf} and will be dropped when the transition is complete.

On my system in a clean R session Sys.getenv("PROJ_LIB") will return "" but
after rgdal or sp are loaded it will be
"C:/Users/user/Documents/R/win-library/4.0/rgdal/proj" GDAL_DATA is similarly
changed.  Also note if sf is loaded it changes the GDAL_DATA variable to
something else.

Unfortunately that means that when you try to run any  of the gdal utilities
via a system call they don't use the co-installed proj library but instead use
rgdal's version. If the versions match this may not be a problem but if they
don't things may go wrong in sometimes obvious and sometimes very subtle ways.
gdal_utilities gets around this by using GDAL installed with sf but doesn't
support all of the utilities I use here - gdaladdo is missing.

With the default values rasterPrep will change the PROJ_LIB and GDAL_DATA
enviromental setting  to "" before making a system call.

This can be turned off with \code{rasterPrepOptions(resetLibs = FALSE)} or changed
to to different location with for example \code{rasterPrepOptions(projLib = "C:/Proj/")} or some appropriate for your system.

The package will always reset the PROJ_LIB and GDAL_DATA variables to the
original value after each the system call so subsequent rgdal, sp, and sf
functions will  find them set as expected or at least as it was (there seem to
be dueling settings!).

Also, note all the changes made by rgdal, sp, sf, and this package are just
for the r session not for the computer as a whole.

See:   https://github.com/r-spatial/discuss/issues/31 for a discussion of this
issue.
}
